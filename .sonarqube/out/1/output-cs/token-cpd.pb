žF
Vc:\Education\csharp\VisualStudio\Epam.Trainings\TrainingRunners\FirstTrainingRunner.cs
	namespace 	
Epam
 
. 
TrainingRunners 
{ 
public		 

class		 
FirstTrainingRunner		 $
:		% &
TrainingRunner		' 5
{

 
public 
FirstTrainingRunner "
(" #
IPrinter# +
printer, 3
)3 4
:5 6
base7 ;
(; <
printer< C
)C D
{ 	
} 	
public 
override 
void 
Run  
(  !
)! "
{ 	
_printer 
. 
	WriteLine 
( 
$str 3
)3 4
;4 5
try 
{ 
Task1 
( 
) 
; 
Task2 
( 
) 
; 
} 
catch 
( 
ArgumentException #
exc$ '
)' (
{ 
_printer 
. 
	WriteLine "
(" #
$str# /
+0 1
exc2 5
.5 6
Message6 =
)= >
;> ?
} 
} 	
private 
void 
Task1 
( 
) 
{ 	
_printer 
. 
	WriteLine 
( 
$str )
)) *
;* +

ReadPerson!! 
(!! 
out!! 
Person!! !
person!!" (
)!!( )
;!!) *
_printer## 
.## 
Write## 
(## 
$str## .
)##. /
;##/ 0
int$$ 
age$$ 
=$$ 
int$$ 
.$$ 
Parse$$ 
($$  
_printer$$  (
.$$( )
ReadLine$$) 1
($$1 2
)$$2 3
)$$3 4
;$$4 5
_printer&& 
.&& 
	WriteLine&& 
(&& 
$str&& $
+&&% &
person&&' -
.&&- .
	OlderThan&&. 7
(&&7 8
age&&8 ;
)&&; <
)&&< =
;&&= >
ReadRectangle(( 
((( 
out(( 
	Rectangle(( '
	rectangle((( 1
)((1 2
;((2 3
_printer** 
.** 
	WriteLine** 
(** 
$"** !
 > Perimeter: **! /
{**/ 0
	rectangle**0 9
.**9 :
	Perimeter**: C
(**C D
)**D E
}**E F
"**F G
)**G H
;**H I
}++ 	
private-- 
void-- 
Task2-- 
(-- 
)-- 
{.. 	
_printer// 
.// 
	WriteLine// 
(// 
$str// +
)//+ ,
;//, -
int11 
n11 
;11 
_printer22 
.22 
Write22 
(22 
$str22 '
)22' (
;22( )
if33 
(33 
int33 
.33 
TryParse33 
(33 
_printer33 %
.33% &
ReadLine33& .
(33. /
)33/ 0
,330 1
out332 5
n336 7
)337 8
&&339 ;
n33< =
>=33> @
$num33A B
&&33C E
n33F G
<33H I
$num33J L
)33L M
{44 
_printer55 
.55 
	WriteLine55 "
(55" #
$str55# &
+55' (
Enum55) -
.55- .
GetName55. 5
(555 6
typeof556 <
(55< =
Months55= C
)55C D
,55D E
n55F G
)55G H
)55H I
;55I J
}66 
else77 
{88 
_printer99 
.99 
	WriteLine99 "
(99" #
$str99# 2
)992 3
;993 4
}:: 
Colors<< 
color<< 
=<< 
Colors<< !
.<<! "
Black<<" '
;<<' (
_printer== 
.== 
	WriteLine== 
(== 
$str== ,
+==- .
color==/ 4
.==4 5
Values==5 ;
(==; <
)==< =
)=== >
;==> ?
var?? 
longRangeValues?? 
=??  !
Enum??" &
.??& '
	GetValues??' 0
(??0 1
typeof??1 7
(??7 8
	LongRange??8 A
)??A B
)??B C
;??C D
_printer@@ 
.@@ 
	WriteLine@@ 
(@@ 
$str@@ /
)@@/ 0
;@@0 1
foreachAA 
(AA 
varAA 
aAA 
inAA 
longRangeValuesAA -
)AA- .
{BB 
_printerCC 
.CC 
WriteCC 
(CC 
$"CC !
{CC" #
aCC# $
}CC$ %
 = CC% (
{CC( )
(CC) *
longCC* .
)CC. /
aCC/ 0
}CC0 1
;CC1 2
"CC2 3
)CC3 4
;CC4 5
}DD 
}EE 	
privateGG 
voidGG 

ReadPersonGG 
(GG  
outGG  #
PersonGG$ *
personGG+ 1
)GG1 2
{HH 	
stringII 
	firstNameII 
,II 
lastNameII &
;II& '
intJJ 
ageJJ 
;JJ 
_printerLL 
.LL 
WriteLL 
(LL 
$strLL 5
)LL5 6
;LL6 7
	firstNameMM 
=MM 
_printerMM  
.MM  !
ReadLineMM! )
(MM) *
)MM* +
;MM+ ,
_printerOO 
.OO 
WriteOO 
(OO 
$strOO 4
)OO4 5
;OO5 6
lastNamePP 
=PP 
_printerPP 
.PP  
ReadLinePP  (
(PP( )
)PP) *
;PP* +
_printerRR 
.RR 
WriteRR 
(RR 
$strRR .
)RR. /
;RR/ 0
ifSS 
(SS 
!SS 
intSS 
.SS 
TryParseSS 
(SS 
_printerSS &
.SS& '
ReadLineSS' /
(SS/ 0
)SS0 1
,SS1 2
outSS3 6
ageSS7 :
)SS: ;
)SS; <
{TT 
throwUU 
newUU 
ArgumentExceptionUU +
(UU+ ,
$strUU, J
)UUJ K
;UUK L
}VV 
personXX 
=XX 
newXX 
PersonXX 
{XX  !
	FirstNameXX" +
=XX, -
	firstNameXX. 7
,XX7 8
LastNameXX9 A
=XXB C
lastNameXXD L
,XXL M
AgeXXN Q
=XXR S
ageXXT W
}XXX Y
;XXY Z
}YY 	
private[[ 
void[[ 
ReadRectangle[[ "
([[" #
out[[# &
	Rectangle[[' 0
	rectangle[[1 :
)[[: ;
{\\ 	
double]] 
x]] 
,]] 
y]] 
,]] 
width]] 
,]] 
height]]  &
;]]& '
_printer__ 
.__ 
Write__ 
(__ 
$str__ )
)__) *
;__* +
x`` 
=`` 
Double`` 
.`` 
Parse`` 
(`` 
_printer`` %
.``% &
ReadLine``& .
(``. /
)``/ 0
)``0 1
;``1 2
_printerbb 
.bb 
Writebb 
(bb 
$strbb '
)bb' (
;bb( )
ycc 
=cc 
Doublecc 
.cc 
Parsecc 
(cc 
_printercc %
.cc% &
ReadLinecc& .
(cc. /
)cc/ 0
)cc0 1
;cc1 2
_printeree 
.ee 
Writeee 
(ee 
$stree +
)ee+ ,
;ee, -
widthff 
=ff 
Doubleff 
.ff 
Parseff  
(ff  !
_printerff! )
.ff) *
ReadLineff* 2
(ff2 3
)ff3 4
)ff4 5
;ff5 6
_printerhh 
.hh 
Writehh 
(hh 
$strhh ,
)hh, -
;hh- .
heightii 
=ii 
Doubleii 
.ii 
Parseii !
(ii! "
_printerii" *
.ii* +
ReadLineii+ 3
(ii3 4
)ii4 5
)ii5 6
;ii6 7
	rectanglekk 
=kk 
newkk 
	Rectanglekk %
{kk& '
Xkk( )
=kk* +
xkk, -
,kk- .
Ykk/ 0
=kk1 2
ykk3 4
,kk4 5
Widthkk6 ;
=kk< =
widthkk> C
,kkC D
HeightkkE K
=kkL M
heightkkN T
}kkU V
;kkV W
}ll 	
}mm 
}nn £
Yc:\Education\csharp\VisualStudio\Epam.Trainings\TrainingRunners\Printer\ConsolePrinter.cs
	namespace 	
Epam
 
. 
TrainingRunners 
{ 
public 

class 
ConsolePrinter 
:  !
IPrinter" *
{ 
public		 
string		 
ReadLine		 
(		 
)		  
=>		! #
Console		$ +
.		+ ,
ReadLine		, 4
(		4 5
)		5 6
;		6 7
public 
void 
Write 
( 
string  
s! "
)" #
=>$ &
Console' .
.. /
Write/ 4
(4 5
s5 6
)6 7
;7 8
public 
void 
	WriteLine 
( 
string $
s% &
)& '
=>( *
Console+ 2
.2 3
	WriteLine3 <
(< =
s= >
)> ?
;? @
} 
} æ
Sc:\Education\csharp\VisualStudio\Epam.Trainings\TrainingRunners\Printer\IPrinter.cs
	namespace 	
Epam
 
. 
TrainingRunners 
{ 
public 

	interface 
IPrinter 
{ 
void		 
	WriteLine		 
(		 
string		 
s		 
)		  
;		  !
void

 
Write

 
(

 
string

 
s

 
)

 
;

 
string 
ReadLine 
( 
) 
; 
} 
} æ
Qc:\Education\csharp\VisualStudio\Epam.Trainings\TrainingRunners\TrainingRunner.cs
	namespace 	
Epam
 
. 
TrainingRunners 
{ 
public 

abstract 
class 
TrainingRunner (
{ 
	protected 
IPrinter 
_printer #
;# $
	protected		 
TrainingRunner		  
(		  !
IPrinter		! )
printer		* 1
)		1 2
{

 	
_printer 
= 
printer 
; 
} 	
public 
abstract 
void 
Run  
(  !
)! "
;" #
} 
} 